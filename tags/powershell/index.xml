<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PowerShell on David Just</title>
    
    
    
    <link>/tags/powershell/</link>
    <description>Recent content in PowerShell on David Just</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 16 Oct 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/powershell/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introducing the M365 Report Tools PowerShell Module</title>
      <link>/post/introducing-the-m365-report-tools-powershell-module/index/</link>
      <pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/introducing-the-m365-report-tools-powershell-module/index/</guid>
      <description>
        
          &lt;img src=&#34;/post/introducing-the-m365-report-tools-powershell-module/index/module.png&#34;/&gt;
          
        
        
        
          The Why I often find the need to gather and extract data from various areas M365 for auditing or for project planning. I had the idea of putting together a PowerShell module containing wrapper functions for some of the most common reports I and colleagues ask for. I wanted to make the commands easy to discover and easy to use. I would like to introduce the M365.Report.Tools PowerShell module!
What can it do?
          
        
        </description>
    </item>
    
    <item>
      <title>Intune Endpoint Tools PowerShell Module</title>
      <link>/post/intune-endpoint-tools-powershell-module/</link>
      <pubDate>Fri, 30 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/intune-endpoint-tools-powershell-module/</guid>
      <description>
        
          &lt;img src=&#34;/post/intune-endpoint-tools-powershell-module/IntuneEndpointTools.png&#34;/&gt;
          
        
        
        
          I am proud to introduce the PowerShell module IntuneEndpointTools. This is the first PS module I have published to the PowerShell gallery.
IntuneEndpointTools contains a set of tools for managing and diagnosing Intune MDM on Windows endpoints designed with Intune support staff in mind. Easily perform diagnostic/troubleshooting operations such as getting the MDM diagnostic report, full diagnostic package, forcing a full sync to Intune, forcing reprocessing of assigned applications, and more!
          
        
        </description>
    </item>
    
    <item>
      <title>Keep Applications Updated with WinGet and Proactive Remediations</title>
      <link>/post/keep-applications-updated-with-winget-and-proactive-remediations/</link>
      <pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/keep-applications-updated-with-winget-and-proactive-remediations/</guid>
      <description>
        
          &lt;img src=&#34;/post/keep-applications-updated-with-winget-and-proactive-remediations/WingetTools.png&#34;/&gt;
          
        
        
        
          The Why In a previous article , I demonstrated how to deploy applications to Intune using WinGet . I recieved a request to demonstrate how to use WinGet to update applications, and more importantly, how to run this on a schedule to keep applications updated. Since then, I found a really handy PowerShell wrapper module for WinGet called WinGetTools by Jeffrey Hicks. I made a small contribution to this module to allow it to work running under SYSTEM context.
          
        
        </description>
    </item>
    
    <item>
      <title>Update Business Voice to Teams Phone Licenses</title>
      <link>/post/update-business-voice-to-teams-phone-licenses/</link>
      <pubDate>Thu, 30 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/update-business-voice-to-teams-phone-licenses/</guid>
      <description>
        
          &lt;img src=&#34;/post/update-business-voice-to-teams-phone-licenses/dontuse.png&#34;/&gt;
          
        
        
        
          Microsoft has announced the retirement of Business Voice licensing. If your tenant is still using Business Voice with Calling Plan or Business Voice without Calling Plan, you will need to switch to the new equivalent Teams Phone plan.
If you take a look at the Microsoft doc linked above, there are examples for how to update the licenses on bulk, however it is baffling Microsoft chose to demonstrate using the Azure AD PowerShell module, when the licensing portion of that module is slated to be retired as of today (6/30).
          
        
        </description>
    </item>
    
    <item>
      <title>Backup and Reset Windows User Profile</title>
      <link>/post/backup-and-reset-windows-user-profile/</link>
      <pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/backup-and-reset-windows-user-profile/</guid>
      <description>
        
          &lt;img src=&#34;/post/backup-and-reset-windows-user-profile/WindowsProfile.png&#34;/&gt;
          
        
        
        
          Premise If you use Windows long enough, eventually you will run into a broken user profile. Sometimes its the start menu that busted, or the Windows store wont open etc. If the typical recommendations of sfc / dism / re-register appx packages with PowerShell fails to remedy the issue, see if the issue is isolated to the user profile. Log into another Windows user account and see if the issue persists.
          
        
        </description>
    </item>
    
    <item>
      <title>Working with the Microsoft Graph PowerShell SDK</title>
      <link>/post/working-with-microsoft-graph-powershell-sdk/</link>
      <pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/working-with-microsoft-graph-powershell-sdk/</guid>
      <description>
        
          &lt;img src=&#34;/post/working-with-microsoft-graph-powershell-sdk/graph.png&#34;/&gt;
          
        
        
        
          What is an API anyway? API stands for &amp;ldquo;Application Interface&amp;rdquo;. In simplest terms, APIs are services that bridge and allow two systems to interact. When we are talking about web services, such as those in M365, API usually refer to a REST API. I like this explanation from AWS:API architecture is usually explained in terms of client and server. The application sending the request is called the client, and the application sending the response is called the server.
          
        
        </description>
    </item>
    
    <item>
      <title>PowerShell Project - Get the Weather report</title>
      <link>/post/use-powershell-to-get-the-weather-report/</link>
      <pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/use-powershell-to-get-the-weather-report/</guid>
      <description>
        
          
          
          
        
        
        
          I thought it would be a fun project to create a PowerShell function which would get the Weather forecast for a specified location.
I started searching online for free Weather REST APIs which I could query for the forecast. I found api.weather.gov which has a completely free and open REST API with complete documentation API Web Service (weather.gov). Checking the documentation, the REST endpoint to query the forecast is https://api.weather.gov/gridpoints/{office}/{gridX},{grid Y}/forecast.
          
        
        </description>
    </item>
    
    <item>
      <title>Export O365 User License Report with friendly names</title>
      <link>/post/o365-license-report-with-friendly-names/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/o365-license-report-with-friendly-names/</guid>
      <description>
        
          
          
          
        
        
        
          I was recently tasked with exporting a report for a client that detailed all users, their location and license assignment in Office 365. I knew the best way to get the job done was by writing a PowerShell script.
I did a quick search online and found lots of examples, however all the examples I found were using the deprecated &amp;ldquo;Microsoft Online&amp;rdquo; / MSOL PS module. I wanted to use the Azure AD module instead so I played around a bit to get the output I wanted.
          
        
        </description>
    </item>
    
    <item>
      <title>Remove Document Redirection Policies over VPN</title>
      <link>/post/remove-document-redirection-vpn/</link>
      <pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/remove-document-redirection-vpn/</guid>
      <description>
        
          &lt;img src=&#34;/post/remove-document-redirection-vpn/DocRedCover.png&#34;/&gt;
          
        
        
        
          In today&amp;rsquo;s world of COVID with so many people working from home, more and more organizations are moving to cloud services for file storage. It used to be quite a common practice, at least in my experience to enable folder redirection for users on-prem. Trying to dismantle folder redirection, especially when our users are working remotely can prove to be a challenge. If you have ever attempted to remove a folder redirection GPO, you have undoubtedly discovered folder redirection policies only apply (and remove) at startup/user logon.
          
        
        </description>
    </item>
    
    <item>
      <title>Sync SharePoint Libraries with PowerShell</title>
      <link>/post/sync-sharepoint-libraries-powershell/index/</link>
      <pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/sync-sharepoint-libraries-powershell/index/</guid>
      <description>
        
          
          
          
        
        
        
          The Problem So you want to move your files to SharePoint, great! But your users don&amp;rsquo;t understand sharepoint, don&amp;rsquo;t wanna learn sharepoint and just want their file explorer experience.
There are a few ways we can go about syncing libraries for our users. We can set a group policy or Intune configuration to automatically sync a SharePoint library however there are some big caveats with this such as a 250~ url character limit.
          
        
        </description>
    </item>
    
  </channel>
</rss>