<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microsoft Graph on David Just</title>
    
    
    
    <link>/tags/microsoft-graph/</link>
    <description>Recent content in Microsoft Graph on David Just</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 16 Oct 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/microsoft-graph/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introducing the M365 Report Tools PowerShell Module</title>
      <link>/post/introducing-the-m365-report-tools-powershell-module/index/</link>
      <pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/introducing-the-m365-report-tools-powershell-module/index/</guid>
      <description>
        
          &lt;img src=&#34;/post/introducing-the-m365-report-tools-powershell-module/index/module.png&#34;/&gt;
          
        
        
        
          The Why I often find the need to gather and extract data from various areas M365 for auditing or for project planning. I had the idea of putting together a PowerShell module containing wrapper functions for some of the most common reports I and colleagues ask for. I wanted to make the commands easy to discover and easy to use. I would like to introduce the M365.Report.Tools PowerShell module!
What can it do?
          
        
        </description>
    </item>
    
    <item>
      <title>Update Business Voice to Teams Phone Licenses</title>
      <link>/post/update-business-voice-to-teams-phone-licenses/</link>
      <pubDate>Thu, 30 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/update-business-voice-to-teams-phone-licenses/</guid>
      <description>
        
          &lt;img src=&#34;/post/update-business-voice-to-teams-phone-licenses/dontuse.png&#34;/&gt;
          
        
        
        
          Microsoft has announced the retirement of Business Voice licensing. If your tenant is still using Business Voice with Calling Plan or Business Voice without Calling Plan, you will need to switch to the new equivalent Teams Phone plan.
If you take a look at the Microsoft doc linked above, there are examples for how to update the licenses on bulk, however it is baffling Microsoft chose to demonstrate using the Azure AD PowerShell module, when the licensing portion of that module is slated to be retired as of today (6/30).
          
        
        </description>
    </item>
    
    <item>
      <title>O365 License Report With Friendly Names Using The Microsoft Graph</title>
      <link>/post/o365-license-report-microsoft-graph/</link>
      <pubDate>Sun, 22 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/o365-license-report-microsoft-graph/</guid>
      <description>
        
          &lt;img src=&#34;/post/o365-license-report-microsoft-graph/ConnectGraph.png&#34;/&gt;
          
        
        
        
          In a previous article, I demonstrated how to export a license report for all users withe the &amp;lsquo;friendly&amp;rsquo; license names using the AzureAD PowerShell module.
Since then, Microsoft has announced the coming retirement of the AzureAD API(and assocaiated PowerShell modules). You should be migrating all scripts over to using the Microsoft Graph PowerShell SDKHere I will provide a sample script to demonstrate how to export a license report for all users in Azure AD utilizing the Microsoft Graph.
          
        
        </description>
    </item>
    
    <item>
      <title>Get Data from workstations and send to an Excel Table for free</title>
      <link>/post/power-automate-send-data-from-powershell-to-excel/</link>
      <pubDate>Tue, 03 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/power-automate-send-data-from-powershell-to-excel/</guid>
      <description>
        
          &lt;img src=&#34;/post/power-automate-send-data-from-powershell-to-excel/powerautomate.png&#34;/&gt;
          
        
        
        
          Premise There are times when I encounter a situation where I want to gather some data from workstations and store it in a spreadsheet / table ect. for tracking purposes. Recently I was working with a client to deploy a cloud printing solution. The on prem print environment was somewhat complex with multiple shared printers some of which were locked down to AD security groups. I needed a way to get a pre-deployment printer inventory for each workstation, then compare a post deployment inventory.
          
        
        </description>
    </item>
    
    <item>
      <title>Working with the Microsoft Graph PowerShell SDK</title>
      <link>/post/working-with-microsoft-graph-powershell-sdk/</link>
      <pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/working-with-microsoft-graph-powershell-sdk/</guid>
      <description>
        
          &lt;img src=&#34;/post/working-with-microsoft-graph-powershell-sdk/graph.png&#34;/&gt;
          
        
        
        
          What is an API anyway? API stands for &amp;ldquo;Application Interface&amp;rdquo;. In simplest terms, APIs are services that bridge and allow two systems to interact. When we are talking about web services, such as those in M365, API usually refer to a REST API. I like this explanation from AWS:API architecture is usually explained in terms of client and server. The application sending the request is called the client, and the application sending the response is called the server.
          
        
        </description>
    </item>
    
  </channel>
</rss>