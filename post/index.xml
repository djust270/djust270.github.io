<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on David Just</title>
    
    
    
    <link>/post/</link>
    <description>Recent content in Posts on David Just</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 May 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>O365 License Report With Friendly Names Using The Microsoft Graph</title>
      <link>/post/o365-license-report-microsoft-graph/</link>
      <pubDate>Sun, 22 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/o365-license-report-microsoft-graph/</guid>
      <description>
        
          &lt;img src=&#34;/post/o365-license-report-microsoft-graph/ConnectGraph.png&#34;/&gt;
          
        
        
        
          In a previous article, I demonstrated how to export a license report for all users withe the &amp;lsquo;friendly&amp;rsquo; license names using the AzureAD PowerShell module.
Since then, Microsoft has announced the coming retirement of the AzureAD API (and assocaiated PowerShell modules). You should be migrating all scripts over to using the Microsoft Graph PowerShell SDK
Here I will provide a sample script to demonstrate how to export a license report for all users in Azure AD utilizing the Microsoft Graph.
          
        
        </description>
    </item>
    
    <item>
      <title>Backup and Reset Windows User Profile</title>
      <link>/post/backup-and-reset-windows-user-profile/</link>
      <pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/backup-and-reset-windows-user-profile/</guid>
      <description>
        
          &lt;img src=&#34;/post/backup-and-reset-windows-user-profile/WindowsProfile.png&#34;/&gt;
          
        
        
        
          Premise If you use Windows long enough, eventually you will run into a broken user profile. Sometimes its the start menu that busted, or the Windows store wont open etc. If the typical recommendations of sfc / dism / re-register appx packages with PowerShell fails to remedy the issue, see if the issue is isolated to the user profile. Log into another Windows user account and see if the issue persists.
          
        
        </description>
    </item>
    
    <item>
      <title>Get Data from workstations and send to an Excel Table for free</title>
      <link>/post/power-automate-send-data-from-powershell-to-excel/</link>
      <pubDate>Tue, 03 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/power-automate-send-data-from-powershell-to-excel/</guid>
      <description>
        
          &lt;img src=&#34;/post/power-automate-send-data-from-powershell-to-excel/powerautomate.png&#34;/&gt;
          
        
        
        
          Premise There are times when I encounter a situation where I want to gather some data from workstations and store it in a spreadsheet / table ect. for tracking purposes. Recently I was working with a client to deploy a cloud printing solution. The on prem print environment was somewhat complex with multiple shared printers some of which were locked down to AD security groups. I needed a way to get a pre-deployment printer inventory for each workstation, then compare a post deployment inventory.
          
        
        </description>
    </item>
    
    <item>
      <title>Working with the Microsoft Graph PowerShell SDK</title>
      <link>/post/working-with-microsoft-graph-powershell-sdk/</link>
      <pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/working-with-microsoft-graph-powershell-sdk/</guid>
      <description>
        
          &lt;img src=&#34;/post/working-with-microsoft-graph-powershell-sdk/graph.png&#34;/&gt;
          
        
        
        
          What is an API anyway? API stands for &amp;ldquo;Application Interface&amp;rdquo;. In simplest terms, APIs are services that bridge and allow two systems to interact. When we are talking about web services, such as those in M365, API usually refer to a REST API. I like this explanation from AWS:
 API architecture is usually explained in terms of client and server. The application sending the request is called the client, and the application sending the response is called the server.
          
        
        </description>
    </item>
    
    <item>
      <title>Intune for macOS Part 2 - Setup BYOD enrollment and Configure macOS Profiles</title>
      <link>/post/intune-for-macos-configure-profiles/</link>
      <pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/intune-for-macos-configure-profiles/</guid>
      <description>
        
          &lt;img src=&#34;/post/intune-for-macos-configure-profiles/mac.jpeg&#34;/&gt;
          
        
        
        
          Setup BYOD Enrollment In part 1, we explored how to setup a macOS virtual machine for testing. Now lets look at actually configuring Intune. The first thing we need to do is get an Apple MDM push certificate.
 Navigate to endpoint.microsoft.com &amp;lt; Devices &amp;lt; Enroll Devices &amp;lt; Apple Enrollment. Download the CSR. Follow the link “Create your MDM Push Certificate” Sign into your Apple ID (or create one if you do not have one) Click create certificate.
          
        
        </description>
    </item>
    
    <item>
      <title>Intune Deploy Software with WinGet</title>
      <link>/post/intune-install-software-with-winget/</link>
      <pubDate>Tue, 08 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/intune-install-software-with-winget/</guid>
      <description>
        
          &lt;img src=&#34;/post/intune-install-software-with-winget/winget.png&#34;/&gt;
          
        
        
        
          Ever since the WinGet package manager was announced, I wanted to find ways to leverage the package manager to simplify deploying software to endpoints. After doing some research and testing, I found that WinGet was unfortunately not designed to be run in SYSTEM context. It was designed to be run under a user account. There is an open issue on GitHub currently and many admins, myself included, would really like WinGet to be designed with enterprise use in mind.
          
        
        </description>
    </item>
    
    <item>
      <title>Configuring Intune for macOS part 1 - Setup a macOS VM</title>
      <link>/post/intune-for-macos-configure-macos-vm/</link>
      <pubDate>Sun, 02 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>/post/intune-for-macos-configure-macos-vm/</guid>
      <description>
        
          &lt;img src=&#34;/post/intune-for-macos-configure-macos-vm/macdark.png&#34;/&gt;
          
        
        
        
          Premise
One of my clients has an Apple only environment. The client was previously managed with Jamf. Jamf is a great MDM platform for Apple devices and works really well however there are some downsides. First, the cost of Jamf is quite high, also while Jamf does support M365 condtional access and SSO with M365, it requires a bit more configuration than Intune does. My client was already paying for Enterprise mobility and Security licensing through M365 with Defender ATP for Endpoint so why not take advantage of the included Intune licensing?
          
        
        </description>
    </item>
    
    <item>
      <title>PowerShell Project - Get the Weather report</title>
      <link>/post/use-powershell-to-get-the-weather-report/</link>
      <pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/use-powershell-to-get-the-weather-report/</guid>
      <description>
        
          
          
          
        
        
        
          I thought it would be a fun project to create a PowerShell function which would get the Weather forecast for a specified location.
I started searching online for free Weather REST APIs which I could query for the forecast. I found api.weather.gov which has a completely free and open REST API with complete documentation API Web Service (weather.gov). Checking the documentation, the REST endpoint to query the forecast is https://api.weather.gov/gridpoints/{office}/{grid X},{grid Y}/forecast.
          
        
        </description>
    </item>
    
    <item>
      <title>Export O365 User License Report with friendly names</title>
      <link>/post/o365-license-report-with-friendly-names/</link>
      <pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/o365-license-report-with-friendly-names/</guid>
      <description>
        
          
          
          
        
        
        
          I was recently tasked with exporting a report for a client that detailed all users, their location and license assignment in Office 365. I knew the best way to get the job done was by writing a PowerShell script.
I did a quick search online and found lots of examples, however all the examples I found were using the deprecated &amp;ldquo;Microsoft Online&amp;rdquo; / MSOL PS module. I wanted to use the Azure AD module instead so I played around a bit to get the output I wanted.
          
        
        </description>
    </item>
    
    <item>
      <title>Collect data in an Azure Table with Power Automate and PowerShell</title>
      <link>/post/create-power-automate-flows-with-powershell-reports/</link>
      <pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/create-power-automate-flows-with-powershell-reports/</guid>
      <description>
        
          
          
          
        
        
        
          If there is one thing I love it is automation. If you are a systems administrator, you have probably at some point needed to create some reports using PowerShell. Usually you would do this manually and export this to a CSV them hand off the report in an email or through SharePoint ect. But how can we automate this process?
While you could run PowerShell scripts as a scheduled task to fire off an email which is quick and dirty.
          
        
        </description>
    </item>
    
    <item>
      <title>Remove Document Redirection Policies over VPN</title>
      <link>/post/remove-document-redirection-vpn/</link>
      <pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/remove-document-redirection-vpn/</guid>
      <description>
        
          &lt;img src=&#34;/post/remove-document-redirection-vpn/DocRedCover.png&#34;/&gt;
          
        
        
        
          In today&amp;rsquo;s world of COVID with so many people working from home, more and more organizations are moving to cloud services for file storage. It used to be quite a common practice, at least in my experience to enable folder redirection for users on-prem. Trying to dismantle folder redirection, especially when our users are working remotely can prove to be a challenge. If you have ever attempted to remove a folder redirection GPO, you have undoubtedly discovered folder redirection policies only apply (and remove) at startup/user logon.
          
        
        </description>
    </item>
    
    <item>
      <title>Sync SharePoint Libraries with PowerShell</title>
      <link>/post/sync-sharepoint-libraries-powershell/index/</link>
      <pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/sync-sharepoint-libraries-powershell/index/</guid>
      <description>
        
          
          
          
        
        
        
          The Problem So you want to move your files to SharePoint, great! But your users don&amp;rsquo;t understand sharepoint, don&amp;rsquo;t wanna learn sharepoint and just want their file explorer experience.
There are a few ways we can go about syncing libraries for our users. We can set a group policy or Intune configuration to automatically sync a SharePoint library however there are some big caveats with this such as a 250~ url character limit.
          
        
        </description>
    </item>
    
  </channel>
</rss>